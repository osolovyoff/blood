#pragma once
#include "../../../include/blood/net/mask.hxx"

namespace blood { namespace net {

Mask::Mask()
: m_data(0)
{}

Mask::Mask(byte _mask)
: m_data(_mask)
{
}

Mask::Mask(string _s)
: m_data(0)
{
    const auto i = mask_to_bit_table.find(_s);
    if (i != mask_to_bit_table.end())
        m_data = i->second;
}

string Mask::get_ip() const
{
    return convert(m_data);
}

byte Mask::get_value() const
{
    return m_data;
}

bool Mask::is_empty() const
{
    return (0 == m_data);
}

string Mask::convert(byte _value)
{
    string mask;
    const auto i = bit_to_mask_table.find(_value);
    if (i != bit_to_mask_table.end())
        mask = i->second;
    return mask;
}

byte   Mask::convert(string _s)
{
    byte bit;
    const auto i = mask_to_bit_table.find(_s);
    if (i != mask_to_bit_table.end())
        bit = i->second;
    return bit;
}

const std::map<byte, std::string> Mask::bit_to_mask_table =
{
    { 0, "0.0.0.0" },
    { 1, "128.0.0.0" },
    { 2, "192.0.0.0" },
    { 3, "224.0.0.0" },
    { 4, "240.0.0.0" },
    { 5, "248.0.0.0" },
    { 6, "252.0.0.0" },
    { 7, "254.0.0.0" },
    { 8, "255.0.0.0" },
    { 9, "255.128.0.0" },
    { 10, "255.192.0.0" },
    { 11, "255.224.0.0" },
    { 12, "255.240.0.0" },
    { 13, "255.248.0.0" },
    { 14, "255.252.0.0" },
    { 15, "255.254.0.0" },
    { 16, "255.255.0.0" },
    { 17, "255.255.128.0" },
    { 18, "255.255.192.0" },
    { 19, "255.255.224.0" },
    { 20, "255.255.240.0" },
    { 21, "255.255.248.0" },
    { 22, "255.255.252.0" },
    { 23, "255.255.254.0" },
    { 24, "255.255.255.0" },
    { 25, "255.255.255.128" },
    { 26, "255.255.255.192" },
    { 27, "255.255.255.224" },
    { 28, "255.255.255.240" },
    { 29, "255.255.255.248" },
    { 30, "255.255.255.252" },
    { 31, "255.255.255.254" },
    { 32, "255.255.255.255" },
};

const std::map<std::string, byte> Mask::mask_to_bit_table
{
    { "0.0.0.0", 0 },
    { "128.0.0.0", 1 },
    { "192.0.0.0", 2 },
    { "224.0.0.0", 3 },
    { "240.0.0.0", 4 },
    { "248.0.0.0", 5 },
    { "252.0.0.0", 6 },
    { "254.0.0.0", 7 },
    { "255.0.0.0", 8 },
    { "255.128.0.0", 9 },
    { "255.192.0.0", 10 },
    { "255.224.0.0", 11 },
    { "255.240.0.0", 12 },
    { "255.248.0.0", 13 },
    { "255.252.0.0", 14 },
    { "255.254.0.0", 15 },
    { "255.255.0.0", 16 },
    { "255.255.128.0", 17 },
    { "255.255.192.0", 18 },
    { "255.255.224.0", 19 },
    { "255.255.240.0", 20 },
    { "255.255.248.0", 21 },
    { "255.255.252.0", 22 },
    { "255.255.254.0", 23 },
    { "255.255.255.0", 24 },
    { "255.255.255.128", 25 },
    { "255.255.255.192", 26 },
    { "255.255.255.224", 27 },
    { "255.255.255.240", 28 },
    { "255.255.255.248", 29 },
    { "255.255.255.252", 30 },
    { "255.255.255.254", 31 },
    { "255.255.255.255", 32 },
};

}} // end blood::net